--Crear una consulta que muestre la información de los usuarios 
--con toda su información de forma legible
--(es decir en vez de códigos mostrar su valor, omitir el campo 
--codigo_municipio), mostrar el nombre
--completo y las fechas en formato DD*NOMBRE_MES*AÑO. 
--Para los lugares mostrar el primer y segundo
--nivel (ejemplo: municipio y departamento). 
--Utilizar producto cartesiano con el operador (+).

SELECT  A.CODIGO_USUARIO, 
        NOMBRE || ' ' || APELLIDO AS NOMBRE,
        USUARIO,
        SEXO,
        TELEFONO,
        CORREO_ELECTRONICO,
        B.NOMBRE_LUGAR,
        C.NOMBRE_LUGAR LUGAR_PADRE,
        D.NOMBRE_LUGAR LUGAR_ABUELO,
        TO_CHAR(A.FECHA_NACIMIENTO,'DD*FMMONTH*YYYY') FECHA_NACIMIENTO,
        TO_CHAR(A.FECHA_REGISTRO,'DD*FMMONTH*YYYY') FECHA_REGISTRO,
        E.TIPO_USUARIO,
        F.ESTADO_USUARIO
FROM    TBL_USUARIOS A,
        TBL_LUGARES B,
        TBL_LUGARES C,
        TBL_LUGARES D,
        TBL_TIPOS_USUARIOS E,
        TBL_ESTADOS_USUARIOS F
WHERE   A.CODIGO_LUGAR = B.CODIGO_LUGAR(+)
AND     B.CODIGO_LUGAR_PADRE = C.CODIGO_LUGAR(+)
AND     C.CODIGO_LUGAR_PADRE = D.CODIGO_LUGAR(+)
AND     A.CODIGO_TIPO_USUARIO = E.CODIGO_TIPO_USUARIO(+)
AND     A.CODIGO_ESTADO_USUARIO = F.CODIGO_ESTADO_USUARIO(+);

SELECT * FROM  TBL_USUARIOS;


--2. Mostrar el video que más y menos veces ha sido compartido. 
--Mostrar los datos del video, cantidad de
--shares y cantidad de usuarios diferentes (distinct) que lo han compartido.

SELECT * FROM TBL_VIDEOS;
SELECT * FROM TBL_SHARES;

WITH COMPARTIDOS AS (
    SELECT  CODIGO_VIDEO, 
            COUNT(*) CANTIDAD_COMPARTIDOS,
            COUNT(DISTINCT CODIGO_USUARIO) USUARIOS_DISTINTOS
    FROM TBL_SHARES
    GROUP BY CODIGO_VIDEO
)
SELECT B.NOMBRE_VIDEO, 
        B.RESOLUCION,
        B.DURACION_SEGUNDOS,
        B.CANTIDAD_LIKES,
        B.CANTIDAD_DISLIKES,
        B.CANTIDAD_VISUALIZACIONES,
        B.FECHA_SUBIDA, 
        B.DESCRIPCION,
        A.CANTIDAD_COMPARTIDOS,
        A.USUARIOS_DISTINTOS,
        C.NOMBRE || ' ' || C.APELLIDO AS USUARIO_DUENO,
        D.NOMBRE_ESTADO_VIDEO,
        E.NOMBRE_IDIOMA,
        F.NOMBRE_CANAL
FROM COMPARTIDOS A
INNER JOIN TBL_VIDEOS B
ON (A.CODIGO_VIDEO = B.CODIGO_VIDEO)
INNER JOIN TBL_USUARIOS C
ON (B.CODIGO_USUARIO = C.CODIGO_USUARIO)
INNER JOIN TBL_ESTADOS_VIDEOS D
ON (B.CODIGO_ESTADO_VIDEO = D.CODIGO_ESTADO_VIDEO)
INNER JOIN TBL_IDIOMAS E
ON (B.CODIGO_IDIOMA = E.CODIGO_IDIOMA)
INNER JOIN TBL_CANALES F
ON (B.CODIGO_CANAL = F.CODIGO_CANAL)
WHERE CANTIDAD_COMPARTIDOS = (
    SELECT MAX(CANTIDAD_COMPARTIDOS)
    FROM COMPARTIDOS
);




WITH COMPARTIDOS AS (
    SELECT  CODIGO_VIDEO, 
            COUNT(*) CANTIDAD_COMPARTIDOS,
            COUNT(DISTINCT CODIGO_USUARIO) USUARIOS_DISTINTOS
    FROM TBL_SHARES
    GROUP BY CODIGO_VIDEO
)
SELECT B.NOMBRE_VIDEO, 
        B.RESOLUCION,
        B.DURACION_SEGUNDOS,
        B.CANTIDAD_LIKES,
        B.CANTIDAD_DISLIKES,
        B.CANTIDAD_VISUALIZACIONES,
        B.FECHA_SUBIDA, 
        B.DESCRIPCION,
        A.CANTIDAD_COMPARTIDOS,
        A.USUARIOS_DISTINTOS,
        C.NOMBRE || ' ' || C.APELLIDO AS USUARIO_DUENO,
        D.NOMBRE_ESTADO_VIDEO,
        E.NOMBRE_IDIOMA,
        F.NOMBRE_CANAL
FROM COMPARTIDOS A
INNER JOIN TBL_VIDEOS B
ON (A.CODIGO_VIDEO = B.CODIGO_VIDEO)
INNER JOIN TBL_USUARIOS C
ON (B.CODIGO_USUARIO = C.CODIGO_USUARIO)
INNER JOIN TBL_ESTADOS_VIDEOS D
ON (B.CODIGO_ESTADO_VIDEO = D.CODIGO_ESTADO_VIDEO)
INNER JOIN TBL_IDIOMAS E
ON (B.CODIGO_IDIOMA = E.CODIGO_IDIOMA)
INNER JOIN TBL_CANALES F
ON (B.CODIGO_CANAL = F.CODIGO_CANAL)
WHERE CANTIDAD_COMPARTIDOS = (
    SELECT MIN(CANTIDAD_COMPARTIDOS)
    FROM COMPARTIDOS
);

--3. Mostrar todos los usuarios que no tienen ninguna lista de reproducción.
SELECT A.* 
FROM TBL_USUARIOS A
LEFT JOIN TBL_LISTAS_REPRODUCCION B
ON (A.CODIGO_USUARIO = B.CODIGO_USUARIO)
WHERE CODIGO_LISTA_REPRODUCCION IS NULL;


SELECT * FROM TBL_LISTAS_REPRODUCCION;



--4. Mostrar todos los videos que tienen un canal, los que no tienen
--un canal y los canales que no tienen
--videos.
SELECT * 
FROM TBL_VIDEOS A
FULL OUTER JOIN TBL_CANALES B
ON (A.CODIGO_cANAL = B.CODIGO_CANAL); 

SELECT * FROM TBL_cAnALeS;


